# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Go Build
        run: make -C lambdas/

      - name: Check Changes
        run: |
          if git diff --quiet --exit-code serverless.yml; then
            echo "No changes in serverless.yml"
            echo "HAS_SERVERLESS_CHANGES=false" >> $GITHUB_ENV
          else
            echo "Changes in serverless.yml"
            echo "HAS_SERVERLESS_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Serverless
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: |
          npm install serverless
          npm install serverless-domain-manager
          npm install serverless-ssm-fetch
          if [ "$HAS_SERVERLESS_CHANGES" = "true" ]; then
            npx serverless deploy
            npx serverless create_domain
          else
            if [ -n "$(ls -A lambdas/bin/)" ]; then
              for f in lambdas/bin/*; do
                if [ -f "$f" ]; then
                  FUNCTION_NAME=$(basename "$f" | cut -d '.' -f 1)
                  echo "Updating code of $FUNCTION_NAME..."
                  npx serverless deploy function -f "$FUNCTION_NAME"
                fi
              done
            fi
          fi

#    - name: Build
#      run: go build -v ./...

#    - name: Test
#      run: go test -v ./...
