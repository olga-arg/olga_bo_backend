service: olga-backend

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: sa-east-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:*
        - s3:*
      Resource: '*'

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  world:
    handler: lambdas/bin/world
    events:
      - httpApi:
          path: /world
          method: get
      - cloudwatchLog: '/aws/lambda/world'
  go-lambda-create-user:
    handler: lambdas/bin/go-lambda-create-user
    events:
      - httpApi:
          path: /create-user
          method: post
      - cloudwatchLog: '/aws/lambda/go-lambda-create-user'


#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    ReceiptsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-${self:service}-receipts
    WorldLambdaLogs:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/world
    goLambdaCreateUserLogs:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/go-lambda-create-user
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

plugins:
  - serverless-domain-manager
  - serverless-ssm-fetch

custom:
  serverlessSsmFetch:
    EMAIL_SENDER_ADDRESS: /aws/ssm/email_sender_address~true
    EMAIL_SENDER_PASSWORD: /email_sender_password~true
  customDomain:
    domainName: 'api.olga.lat'
    basePath: 'api'
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: regional
    apiType: http
