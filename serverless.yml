service: olga-backoffice-backend
app: olga-backoffice

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: sa-east-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:*
        - s3:*
      Resource: '*'

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  hello:
    handler: bin/hello
    events:
      - httpApi:
          path: /hello
          method: get
  world:
    handler: bin/world
    events:
      - httpApi:
          path: /world
          method: get
      - cloudwatchLog: '/aws/lambda/world'

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    ReceiptsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-${self:app}-receipts-bucket
    WorldLambdaLogs:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/world

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: 'api.olga.lat'
    basePath: 'api'
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: regional
    apiType: http
