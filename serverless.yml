service: backend
app: backoffice-backend
org: olga

frameworkVersion: '3'

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: sa-east-1

iam:
  role:
    statements:
      - Effect: 'Allow'
        Action:
          - 's3:ListBucket'
        Resource: { 'Fn::Join': ['', ['arn:aws:s3:::', { 'Ref': 'ServerlessDeploymentBucket' }]] }
      - Effect: 'Allow'
        Action:
          - 's3:PutObject'
        Resource:
          Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - 'Ref': 'ServerlessDeploymentBucket'
              - '/*'

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  hello:
    handler: bin/hello
    events:
      - httpApi:
          path: /hello
          method: get
  world:
    handler: bin/world
    events:
      - httpApi:
          path: /world
          method: get
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
events:
  events:
    - httpApi:
        path: /users/create
        method: get
    - s3: ${env:BUCKET}
    - cloudwatchLog: '/aws/lambda/hello'

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    NewResource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-${self:app}-receipts-bucket
  Outputs:
    NewOutput:
      Description: 'Description for the output'
      Value: 'Some output value'

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: 'api.olga.lat'
    basePath: 'api'
    stage: ${self:provider.stage}
    createRoute53Record: true
